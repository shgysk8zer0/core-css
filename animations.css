:root {
	transition-duration: var(--animation-duration, 400ms);
	animation-duration: var(--animation-duration, 400ms);
}

*:not(use) {
	transform-origin: inherit;
	transition-duration: inherit;
	animation-play-state: inherit;
	animation-iteration-count: inherit;
	animation-timing-function: inherit;
	animation-direction: inherit;
	animation-duration: inherit;
	animation-fill-mode: inherit;
}

.transform-origin-center {
	transform-origin: center;
}

.transform-origin-top {
	transform-origin: top;
}

.transform-origin-bottom {
	transform-origin: bottom;
}

.transform-origin-left {
	transform-origin: left;
}

.transform-origin-right {
	transform-origin: right;
}

.transform-origin-top-center {
	transform-origin: top center;
}

.transform-origin-top-left {
	transform-origin: top left;
}

.transform-origin-top-right {
	transform-origin: top right;
}

.transform-origin-bottom-left {
	transform-origin: bottom left;
}

.transform-origin-bottom-right {
	transform-origin: bottom right;
}

/*======================== Transition Rules =================================*/

.transition-all {
	transition-property: all;
}

.transition-transform {
	transition-property: transform;
}

.transition-opacity {
	transition-property: opacity;
}

.transition-color {
	transition-property: color;
}

.transition-background {
	transition-property: background;
}

.transition-background-position {
	transition-property: background-position;
}

.transition-height {
	transition-property: height;
}

.transition-width {
	transition-property: width;
}

.transition-margin {
	transition-property: margin;
}

.transition-padding {
	transition-property: padding;
}

.transition-linear {
	transition-timing-function: linear;
}

.transition-ease {
	transition-timing-function: ease;
}

.transition-ease-in {
	transition-timing-function: ease-in;
}

.transition-ease-out {
	transition-timing-function: ease-out;
}

.transition-ease-in-out {
	transition-timing-function: ease-in-out;
}

.transition-ease-in-out {
	transition-timing-function: ease-in-out;
}

.transition-stagger > :nth-child(5n+1) {
	animation-delay: calc(1 * var(--animation-stagger, 200ms));
}

.transition-stagger > :nth-child(5n+2) {
	animation-delay: calc(2 * var(--animation-stagger, 200ms));
}

.transition-stagger > :nth-child(5n+3) {
	animation-delay: calc(3 * var(--animation-stagger, 200ms));
}

.transition-stagger > :nth-child(5n+4) {
	animation-delay: calc(4 * var(--animation-stagger, 200ms));
}

.transition-stagger > :nth-child(5n+5) {
	animation-delay: calc(5 * var(--animation-stagger, 200ms));
}

/*================== Collection of Simple CSS3 transitions ===================*/

.bounce {
	animation-name: bounce;
}

.fade-in {
	animation-name: fade-in;
}

.fade-out {
	animation-name: fade-out;
}

.shrink {
	animation-name: shrink;
}

.grow {
	animation-name: grow;
}

.fly-in {
	animation-name: fly-in;
}

.animation-infinite {
	animation-iteration-count: infinite;
}

.animation-alternate {
	animation-direction: alternate;
}

.animation-normal {
	animation-direction: normal;
}

.animation-fill-forwards {
	animation-fill-mode: forwards;
}

.animation-fill-backwards {
	animation-fill-mode: backwards;
}

.animation-fill-both {
	animation-fill-mode: both;
}

.animation-fill-none {
	animation-fill-mode: none;
}

.animation-linear {
	animation-timing-function: linear;
}

.animation-ease {
	animation-timing-function: ease;
}

.animation-ease-in {
	animation-timing-function: ease-in;
}

.animation-ease-out {
	animation-timing-function: ease-out;
}

.animation-ease-in-out {
	animation-timing-function: ease-in-out;
}

.animation-stagger > :nth-child(5n+1) {
	animation-delay: calc(1 * var(--animation-stagger, 200ms));
}

.animation-stagger > :nth-child(5n+2) {
	animation-delay: calc(2 * var(--animation-stagger, 200ms));
}

.animation-stagger > :nth-child(5n+3) {
	animation-delay: calc(3 * var(--animation-stagger, 200ms));
}

.animation-stagger > :nth-child(5n+4) {
	animation-delay: calc(4 * var(--animation-stagger, 200ms));
}

.animation-stagger > :nth-child(5n+5) {
	animation-delay: calc(5 * var(--animation-stagger, 200ms));
}

@keyframes bounce {
	from {
		transform: scaleY(.85);
	}

	to {
		filter: drop-shadow(0 0.3em 0.1em rgba(0,0,0,0.7));
		transform: translateY(-1.2em);
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
}

@keyframes fade-out {
	to {
		opacity: 0;
	}
}

@keyframes shrink {
	to {
		transform: scale(0);
	}
}

@keyframes grow {
	from {
		transform: scale(0);
	}
}

@keyframes fly-in {
	from {
		transform: scale(0) translate(-50vw, -50vh);
	}
}

@keyframes slide {
	from {
		left: 100%;
	}

	to {
		left: 0;
	}
}

@keyframes progress {
	to {
		background-position: right;
	}
}

@keyframes hanger {
	from {
		transform: rotateX(-90deg);
		transform-origin: center -40%;
	}
}

@keyframes door {
	from {
		transform: rotateY(90deg);
	}
}

@keyframes sidekick {
	from {
		left: 100%;
		transform: rotate(270deg) scale(0);
	}
}

@keyframes cube {
	from {
		left: 100%;
		transform: matrix(0.133,-0.489,-0.200,2.489,-100.667,80.000);
	}
}

@keyframes shine {
	0% {
		text-shadow: 4px 8px 2px #ddd;
	}

	25% {
		text-shadow: 4px -8px 2px #ddd;
	}

	50% {
		text-shadow: -2px -8px 2px #ddd;
	}

	75% {
		text-shadow: -2px 8px 2px #ddd;
	}

	100% {
		text-shadow: 4px 8px 2px #ddd;
	}
}
